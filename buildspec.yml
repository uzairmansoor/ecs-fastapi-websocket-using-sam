version: 0.2
run-as: root
 
phases:
  install:
    runtime-versions:
      nodejs: 18  
    commands:
      - echo "Installing app dependencies..."
      - npm -v
      - node -v
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME
      - echo "Repository URI - $REPOSITORY_URI"
      - echo "Getting Docker Env variables from parameter Store..."
      - echo "Logging into Docker Hub..."
      - docker login -u uzairmansoor -p Uzair@123
  pre_build:
    commands:
      - npm install
  build:
    commands:
      - ls -la
      - cd fastapi-ecs
      - docker build -t ecs-fastapi -f Dockerfile .
      - docker tag serverless-fastapi-ecs-service-dev:latest 611466466027.dkr.ecr.us-east-1.amazonaws.com/serverless-fastapi-ecs-service-dev:latest
      # - docker build --tag $IMAGE_REPO_NAME -f Dockerfile.dev .
      # - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:latest
      # - docker tag resume-grader-app-backend:latest 095773313313.dkr.ecr.us-east-1.amazonaws.com/resume-grader-app-backend:latest
      # - echo "Fetching environment variables from SSM Parameter Store..."
      # - |
      #   aws ssm get-parameters-by-path \
      #       --path "/rfp/prod/BE" \
      #       --recursive \
      #       --with-decryption \
      #       --query "Parameters[].[Name,Value]" \
      #       --output text | while read name value; do
      #       key=$(basename "$name")
      #       echo "${key}=${value}" >> .env.production.local
      #   done
      # - echo "Environment variables written to .env file:"
      # - cat .env.production.local
      # - echo "Code Commit ID" ==== $CODEBUILD_RESOLVED_SOURCE_VERSION
      # - echo "Build started on `date`"
      # - |
      #   if [ -z "$ROLLBACK_COMMIT_ID" ]; then
      #   echo "Building the docker image"
      #   docker build --build-arg ENV_FILE=.env.production.local --tag $IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION -f Dockerfile.prod .
      #   else
      #   echo "Docker build not required"
      #   fi
      # - |
      #   if [ -z "$ROLLBACK_COMMIT_ID" ]; then
      #   echo "Tagging the docker image"
      #   docker tag $IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
      #   else
      #   echo "Image tag not required"
      #   fi
  post_build:
    commands:
      - echo "Build completed on `date`"
      # - |
      #   if [ -z "$ROLLBACK_COMMIT_ID" ]; then
      #     IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION"
      #     docker push $IMAGE_URI
      #   else
      #     echo "Image push not required"
      #     # Optionally set IMAGE_URI to the existing image URI or leave it as-is for rollback purposes
      - IMAGE_URI="611466466027.dkr.ecr.us-east-1.amazonaws.com/serverless-fastapi-ecs-service-dev:latest"
      #   fi
      # - echo "Writing image definitions file..."
      # - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$IMAGE_URI" > imagedefinitions.json
      # - docker push 095773313313.dkr.ecr.us-east-1.amazonaws.com/resume-grader-backend-ecr:latest
      - docker push 611466466027.dkr.ecr.us-east-1.amazonaws.com/serverless-fastapi-ecs-service-dev:latest
      #- docker push 095773313313.dkr.ecr.us-east-1.amazonaws.com/resume-grader-app-backend:latest
#       - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$IMAGE_URI" > imagedefinitions.json
#       - cat imagedefinitions.json
 
# artifacts:
#   files: imagedefinitions.json